package proto.ca;

// ===========================================================================
//   这个是 CA 签名服务器和 avrouter 交互协议
//   生成命令:
//       protoc -I=. --cpp_out=. ca.proto
// ===========================================================================

// avrouter -> CA || CA -> peter
message csr_request{
	required bytes fingerprint = 1;
	required bytes csr = 2;
};

// peter -> CA || CA -> avrouter
message csr_result{
	enum csr_code {
		OK = 0;
		FAILED_INVALID_CSR = 1;
		FAILED_DUPLICATED_NAME = 2;
		// 无权限, 你不是 avrouter
		// 其实是压根不鸟你, 不会给你这个答复, 呵呵
		FAILED_NO_PRIVILEGE = 3;
	}
	required csr_code result = 1;
	required bytes fingerprint = 2;
	required bytes cert = 3;
};

message push_ok{
	// push 过去的 csr 或者 cert 的指纹们
	// 可以统一应答. 一般要求在 10个 push 内应答
	// 因此这个列表最多就 10 个.
	// 通常每个 push 都来一个应答
	repeated bytes fingerprints = 1;
};

// avrouter -> CA || avim -> avrouter
message cert_pull{
	// RSA 公钥的 sha1 摘要
	required bytes fingerprint = 1;
};


// peter -> CA
// CA 会用 csr_push 应答哦!
message csr_pull{
	required bytes fingerprint = 1;
};


// peter -> CA.
// 获取待签发的 CSR 列表
message csr_pendding {
	// 等待列队长度
};

message csr_pendding_list {
	// 等待列队长度
	required uint32 num = 1;

	// 各个 CSR 的指纹 (客户 RSA 公钥的 sha1 摘要)
	repeated bytes fingerprint = 2;
};

