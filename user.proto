package proto;

// ===========================================================================
//   这个是新的 JACK 写的router服务器所使用的协议层消息定义 用户登录相关协议
//   生成命令:
//       protoc -I=. --cpp_out=. user.proto
// ===========================================================================


message client_hello
{
	required string client = 1;
	required uint32 version = 2;
	required bytes random_g = 3;
	required bytes random_p = 4;
	required bytes random_pub_key = 5;
}

message server_hello
{
	required string servername = 1;
	required uint32 version = 2;
	required bytes random_pub_key = 5;
	// 服务器的 av 地址
	required string server_av_address = 3;
}

message login
{
	// 用户的证书
	required bytes user_cert = 1;
	// 用私钥将收到的 random_pub_key 加密一下
	// 如果服务器比对后即证明客户端的身份了
	required bytes encryped_radom_key = 2;
	optional string other_info = 3;
}

message login_result
{
	// 0 表示成功， 其他数字表示失败原因
  enum login_result_code {
    LOGIN_SUCCEED = 0;
    NO_SUCH_USER = 1;
    PEREMISSON_DENIED = 2;
    PUBLIC_KEY_MISMATCH = 3;
  }
  required login_result_code result = 1;
 // TODO 其他信息
}

message user_register{
	required string user_name = 1;
	required bytes rsa_pubkey = 2;
	optional string mail_address = 3;
	optional string cell_phone = 4;
}

// 如果把证书密钥丢了, 或者密钥设置的加密锁的密码忘了, 那么就需要重新生成证书,
// 发送如下的请求到服务器并等待验证

message user_cert_lost_request{
	// 注册时填入的用户名 (通常就是 av地址里的用户名部分)
	required string user_name = 1;

	// 注册的时候填写的邮箱地址
	optional string mail_address = 3;
	// 注册的时候填写的手机号码
	optional string cell_phone = 4;
}

// 发送邮箱里输入的超长认证验证码
message user_cert_lost_verify{
	// 取回密码的时候邮件里提供的安全验证
	required string secret_code = 1;
}

